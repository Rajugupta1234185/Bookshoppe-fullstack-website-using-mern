{"ast":null,"code":"var _jsxFileName = \"D:\\\\VS_CODE\\\\bookshopping\\\\src\\\\index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport gmailverification from './gmailverification';\n// import Login from './Login';\n// import Signup from './Signup';\n// import Forgetpassword from './forgetpassword';\n\n// function App() {\n//   // State to toggle between login, signup, and forgetpassword\n//   const [page, setPage] = useState('login'); // 'login', 'signup', 'forgetpassword'\n\n//   // Function to handle page change\n//   const togglePage = (pageName) => {\n//     setPage(pageName);\n//   };\n\n//   return (\n//     <div className=\"auth-container\">\n//       {/* Conditionally render Login, Signup or Forgetpassword */}\n//       {page === 'login' && (\n//         <div className=\"loginpage\">\n//           <Login onCreateAccount={() => togglePage('signup')} onforgetfunction={() => togglePage('forgetpassword')} />\n//         </div>\n//       )}\n//       {page === 'signup' && (\n//         <div className=\"signupage\">\n//           <Signup  onUserregistered={()=>togglePage('login')}/>\n//         </div>\n//       )}\n//       {page === 'forgetpassword' && (\n//         <div className=\"forget-page\">\n//           <Forgetpassword backtohome={()=>togglePage('login')} />\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(/*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 41,\n  columnNumber: 3\n}, this));","map":{"version":3,"names":["React","useState","ReactDOM","gmailverification","jsxDEV","_jsxDEV","root","createRoot","document","getElementById","render","StrictMode","children","App","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["D:/VS_CODE/bookshopping/src/index.js"],"sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport gmailverification from './gmailverification';\n// import Login from './Login';\n// import Signup from './Signup';\n// import Forgetpassword from './forgetpassword';\n\n// function App() {\n//   // State to toggle between login, signup, and forgetpassword\n//   const [page, setPage] = useState('login'); // 'login', 'signup', 'forgetpassword'\n\n//   // Function to handle page change\n//   const togglePage = (pageName) => {\n//     setPage(pageName);\n//   };\n\n//   return (\n//     <div className=\"auth-container\">\n//       {/* Conditionally render Login, Signup or Forgetpassword */}\n//       {page === 'login' && (\n//         <div className=\"loginpage\">\n//           <Login onCreateAccount={() => togglePage('signup')} onforgetfunction={() => togglePage('forgetpassword')} />\n//         </div>\n//       )}\n//       {page === 'signup' && (\n//         <div className=\"signupage\">\n//           <Signup  onUserregistered={()=>togglePage('login')}/>\n//         </div>\n//       )}\n//       {page === 'forgetpassword' && (\n//         <div className=\"forget-page\">\n//           <Forgetpassword backtohome={()=>togglePage('login')} />\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,iBAAiB,MAAM,qBAAqB;AACnD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,IAAI,GAAGJ,QAAQ,CAACK,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,cACTL,OAAA,CAACL,KAAK,CAACW,UAAU;EAAAC,QAAA,eACfP,OAAA,CAACQ,GAAG;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACS,CACpB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}