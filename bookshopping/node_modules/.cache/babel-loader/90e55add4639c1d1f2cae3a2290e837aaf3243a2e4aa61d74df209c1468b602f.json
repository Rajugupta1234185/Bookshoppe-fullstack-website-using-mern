{"ast":null,"code":"var _jsxFileName = \"D:\\\\VS_CODE\\\\bookshopping\\\\src\\\\Signup.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate for navigation\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Signup = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    fname: '',\n    lname: '',\n    gmail: '',\n    phone: '',\n    password: '',\n    rePassword: ''\n  });\n  const [message, setMessage] = useState('');\n  const [messageType, setMessageType] = useState(''); // 'error' or 'success'\n  const [isRegistered, setIsRegistered] = useState(false); // State to track registration success\n\n  const navigate = useNavigate(); // Initialize useNavigate\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n\n  // Handle form submission\n  const handleSubmit = async () => {\n    const {\n      fname,\n      lname,\n      gmail,\n      phone,\n      password,\n      rePassword\n    } = formData;\n\n    // Validate form data (validation logic not shown here)\n\n    try {\n      const response = await axios.post('http://localhost:5000/api/registration', formData);\n      if (response.data.success) {\n        setMessage(response.data.message); // Success message from server\n        setMessageType('success'); // Set message type to success\n        setIsRegistered(true); // Set the registration state to true\n\n        // Optional: Redirect to the Login page after successful registration\n        setTimeout(() => {\n          navigate('/login'); // Navigates to the login page after 3 seconds\n        }, 3000); // Wait for 3 seconds before redirecting (feel free to adjust)\n      }\n    } catch (error) {\n      setMessage('Error: Unable to register');\n      setMessageType('error');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fname\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"fname\",\n          children: \"Enter First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"enterfname\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"fname\",\n          name: \"fname\",\n          value: formData.fname,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleSubmit,\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `message-box ${messageType}`,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), isRegistered && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Registration successful! Redirecting you to the login page...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/login'),\n        children: \"Go to Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(Signup, \"fdJTUPiiISzSJmSrIRUHFblKaOA=\", false, function () {\n  return [useNavigate];\n});\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","useNavigate","axios","jsxDEV","_jsxDEV","Signup","_s","formData","setFormData","fname","lname","gmail","phone","password","rePassword","message","setMessage","messageType","setMessageType","isRegistered","setIsRegistered","navigate","handleChange","e","name","value","target","prevData","handleSubmit","response","post","data","success","setTimeout","error","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","onClick","_c","$RefreshReg$"],"sources":["D:/VS_CODE/bookshopping/src/Signup.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate for navigation\r\nimport axios from 'axios';\r\n\r\nconst Signup = () => {\r\n  const [formData, setFormData] = useState({\r\n    fname: '',\r\n    lname: '',\r\n    gmail: '',\r\n    phone: '',\r\n    password: '',\r\n    rePassword: '',\r\n  });\r\n\r\n  const [message, setMessage] = useState('');\r\n  const [messageType, setMessageType] = useState(''); // 'error' or 'success'\r\n  const [isRegistered, setIsRegistered] = useState(false); // State to track registration success\r\n\r\n  const navigate = useNavigate(); // Initialize useNavigate\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async () => {\r\n    const { fname, lname, gmail, phone, password, rePassword } = formData;\r\n\r\n    // Validate form data (validation logic not shown here)\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/registration', formData);\r\n      \r\n      if (response.data.success) {\r\n        setMessage(response.data.message); // Success message from server\r\n        setMessageType('success'); // Set message type to success\r\n        setIsRegistered(true); // Set the registration state to true\r\n\r\n        // Optional: Redirect to the Login page after successful registration\r\n        setTimeout(() => {\r\n          navigate('/login'); // Navigates to the login page after 3 seconds\r\n        }, 3000); // Wait for 3 seconds before redirecting (feel free to adjust)\r\n      }\r\n    } catch (error) {\r\n      setMessage('Error: Unable to register');\r\n      setMessageType('error');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form>\r\n        <div className=\"fname\">\r\n          <label htmlFor=\"fname\">Enter First Name</label>\r\n        </div>\r\n        <div className=\"enterfname\">\r\n          <input\r\n            type=\"text\"\r\n            id=\"fname\"\r\n            name=\"fname\"\r\n            value={formData.fname}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n\r\n        {/* Other form fields for lname, gmail, phone, password, rePassword */}\r\n        \r\n        <button type=\"button\" onClick={handleSubmit}>Sign Up</button>\r\n      </form>\r\n\r\n      {message && (\r\n        <div className={`message-box ${messageType}`}>\r\n          <p>{message}</p>\r\n        </div>\r\n      )}\r\n\r\n      {/* Optionally show a \"Go to Login\" button after successful registration */}\r\n      {isRegistered && (\r\n        <div>\r\n          <p>Registration successful! Redirecting you to the login page...</p>\r\n          {/* Optionally render a button to navigate to the login page */}\r\n          <button onClick={() => navigate('/login')}>Go to Login</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}