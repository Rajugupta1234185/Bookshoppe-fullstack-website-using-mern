{"ast":null,"code":"export const RequiredValidate=(value,fieldname)=>{if(!value){return`${fieldname} is required`;}return'';};export const GmailValidate=gmail=>{if(gmail.includes(' ')||!gmail.endsWith('@gmail.com')){return'Gmail must end with @gmail.com and cannot contain spaces.';}return'';};export const PhoneValidate=phone=>{const phoneAsNumber=Number(phone);if(phone.length===10&&!isNaN(phoneAsNumber)&&/^[0-9]{10}$/.test(phone)){return'';}return'Phone number must be 10 digits and contain only numbers.';};export const PasswordValidate=password=>{let errorMessage='';if(password.length<=8){errorMessage+='Password must be longer than 8 characters. ';}if(!/[0-9]/.test(password)){errorMessage+='Password must contain at least one number. ';}if(!/[!@#$%^&*(),.?\":{}|<>]/.test(password)){errorMessage+='Password must contain at least one special character. ';}if(!/[A-Z]/.test(password)){errorMessage+='Password must contain at least one uppercase letter. ';}return errorMessage.trim()||'';};export const rePasswordValidate=(password,rePassword)=>{if(password!==rePassword){return'Password and re-entered password do not match.';}return'';};","map":{"version":3,"names":["RequiredValidate","value","fieldname","GmailValidate","gmail","includes","endsWith","PhoneValidate","phone","phoneAsNumber","Number","length","isNaN","test","PasswordValidate","password","errorMessage","trim","rePasswordValidate","rePassword"],"sources":["D:/mernstack/bookshopping/src/errorhandling.js"],"sourcesContent":["export const RequiredValidate = (value, fieldname) => {\r\n    if (!value) {\r\n      return `${fieldname} is required`;\r\n    }\r\n    return '';\r\n  };\r\n  \r\n  export const GmailValidate = (gmail) => {\r\n    if (gmail.includes(' ') || !gmail.endsWith('@gmail.com')) {\r\n      return 'Gmail must end with @gmail.com and cannot contain spaces.';\r\n    }\r\n    return '';\r\n  };\r\n  \r\n  export const PhoneValidate = (phone) => {\r\n    const phoneAsNumber = Number(phone);\r\n    if (phone.length === 10 && !isNaN(phoneAsNumber) && /^[0-9]{10}$/.test(phone)) {\r\n      return '';\r\n    }\r\n    return 'Phone number must be 10 digits and contain only numbers.';\r\n  };\r\n  \r\n  export const PasswordValidate = (password) => {\r\n    let errorMessage = '';\r\n  \r\n    if (password.length <= 8) {\r\n      errorMessage += 'Password must be longer than 8 characters. ';\r\n    }\r\n    if (!/[0-9]/.test(password)) {\r\n      errorMessage += 'Password must contain at least one number. ';\r\n    }\r\n    if (!/[!@#$%^&*(),.?\":{}|<>]/.test(password)) {\r\n      errorMessage += 'Password must contain at least one special character. ';\r\n    }\r\n    if (!/[A-Z]/.test(password)) {\r\n      errorMessage += 'Password must contain at least one uppercase letter. ';\r\n    }\r\n  \r\n    return errorMessage.trim() || '';\r\n  };\r\n  \r\n  export const rePasswordValidate = (password, rePassword) => {\r\n    if (password !== rePassword) {\r\n      return 'Password and re-entered password do not match.';\r\n    }\r\n    return '';\r\n  };\r\n  "],"mappings":"AAAA,MAAO,MAAM,CAAAA,gBAAgB,CAAGA,CAACC,KAAK,CAAEC,SAAS,GAAK,CAClD,GAAI,CAACD,KAAK,CAAE,CACV,MAAO,GAAGC,SAAS,cAAc,CACnC,CACA,MAAO,EAAE,CACX,CAAC,CAED,MAAO,MAAM,CAAAC,aAAa,CAAIC,KAAK,EAAK,CACtC,GAAIA,KAAK,CAACC,QAAQ,CAAC,GAAG,CAAC,EAAI,CAACD,KAAK,CAACE,QAAQ,CAAC,YAAY,CAAC,CAAE,CACxD,MAAO,2DAA2D,CACpE,CACA,MAAO,EAAE,CACX,CAAC,CAED,MAAO,MAAM,CAAAC,aAAa,CAAIC,KAAK,EAAK,CACtC,KAAM,CAAAC,aAAa,CAAGC,MAAM,CAACF,KAAK,CAAC,CACnC,GAAIA,KAAK,CAACG,MAAM,GAAK,EAAE,EAAI,CAACC,KAAK,CAACH,aAAa,CAAC,EAAI,aAAa,CAACI,IAAI,CAACL,KAAK,CAAC,CAAE,CAC7E,MAAO,EAAE,CACX,CACA,MAAO,0DAA0D,CACnE,CAAC,CAED,MAAO,MAAM,CAAAM,gBAAgB,CAAIC,QAAQ,EAAK,CAC5C,GAAI,CAAAC,YAAY,CAAG,EAAE,CAErB,GAAID,QAAQ,CAACJ,MAAM,EAAI,CAAC,CAAE,CACxBK,YAAY,EAAI,6CAA6C,CAC/D,CACA,GAAI,CAAC,OAAO,CAACH,IAAI,CAACE,QAAQ,CAAC,CAAE,CAC3BC,YAAY,EAAI,6CAA6C,CAC/D,CACA,GAAI,CAAC,wBAAwB,CAACH,IAAI,CAACE,QAAQ,CAAC,CAAE,CAC5CC,YAAY,EAAI,wDAAwD,CAC1E,CACA,GAAI,CAAC,OAAO,CAACH,IAAI,CAACE,QAAQ,CAAC,CAAE,CAC3BC,YAAY,EAAI,uDAAuD,CACzE,CAEA,MAAO,CAAAA,YAAY,CAACC,IAAI,CAAC,CAAC,EAAI,EAAE,CAClC,CAAC,CAED,MAAO,MAAM,CAAAC,kBAAkB,CAAGA,CAACH,QAAQ,CAAEI,UAAU,GAAK,CAC1D,GAAIJ,QAAQ,GAAKI,UAAU,CAAE,CAC3B,MAAO,gDAAgD,CACzD,CACA,MAAO,EAAE,CACX,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}