{"ast":null,"code":"var _jsxFileName = \"D:\\\\VS_CODE\\\\bookshopping\\\\src\\\\forgetpassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './forgetpassword.css';\nimport { GmailValidate } from './errorhandling';\nimport { useSpring, animated } from '@react-spring/web';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Forgetpassword = ({\n  backtohome,\n  otpVerifysuccess\n}) => {\n  _s();\n  const [finalgmail, setgmail] = useState({\n    gmail: ''\n  });\n  const [otpSent, setOtpSent] = useState(false); // State to track if OTP is sent\n  const [otpExpireTime, setOtpExpireTime] = useState(0); // State for OTP expiry time\n  const [otp, setOtp] = useState(''); // State to store OTP entered by the user\n  const [password, setPassword] = useState(''); // State to store the new password\n  const [passwordReset, setPasswordReset] = useState(false); // State for showing password reset form\n  const [firstPhaseDone, setFirstPhaseDone] = useState(false);\n  const handleChange = e => {\n    setgmail({\n      ...finalgmail,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleOtpChange = e => {\n    setOtp(e.target.value); // Directly set OTP as a string\n  };\n  const handlePasswordChange = e => {\n    setPassword(e.target.value); // Handle password input\n  };\n  const forget_checkvalidation = async () => {\n    try {\n      // Validate email\n      const response = await GmailValidate(finalgmail.gmail);\n      if (response) {\n        alert(response);\n      }\n\n      // Send OTP request\n      const server_response = await axios.post('http://localhost:5000/api/sendotp/send-otp', {\n        gmail: finalgmail.gmail // Ensure this is sent as an object\n      });\n      alert(server_response.data.message);\n      if (server_response.status === 200) {\n        setOtpSent(true);\n        startOtpTimer(); // Start OTP expiration timer\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(\"Error:\", error); // Debugging\n      alert(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"An error occurred while sending OTP.\");\n    }\n  };\n  const startOtpTimer = () => {\n    const expiryTime = 5 * 60; // 5 minutes in seconds\n    setOtpExpireTime(expiryTime);\n    const timer = setInterval(() => {\n      setOtpExpireTime(prevTime => {\n        if (prevTime <= 1) {\n          clearInterval(timer);\n          return 0;\n        }\n        return prevTime - 1;\n      });\n    }, 1000);\n  };\n\n  // Spring animation code for initial and OTP screen\n  const div1 = useSpring({\n    opacity: 1,\n    transform: 'rotate(0deg)',\n    from: {\n      opacity: 0,\n      transform: 'rotate(180deg)'\n    },\n    config: {\n      tension: 200,\n      friction: 15\n    }\n  });\n  const div2 = useSpring({\n    opacity: 1,\n    transform: 'translateX(0%)',\n    from: {\n      opacity: 0,\n      transform: 'translateX(-100%)'\n    },\n    config: {\n      tension: 70,\n      friction: 15\n    }\n  });\n  const div3 = useSpring({\n    opacity: otpSent ? 1 : 0,\n    transform: otpSent ? 'translateX(0%)' : 'translateX(100%)',\n    config: {\n      tension: 70,\n      friction: 15\n    }\n  });\n  const div4 = useSpring({\n    opacity: passwordReset ? 1 : firstPhaseDone ? 0.5 : 0,\n    // Apply opacity based on phases\n    transform: passwordReset ? 'rotate(0deg)' // Apply rotation after the transition phase\n    : firstPhaseDone ? 'rotate(0deg)' // Transition to no rotation after first phase\n    : 'translateY(100%)',\n    // Initial phase: starting position off-screen\n    config: {\n      tension: 200,\n      friction: 15\n    },\n    from: {\n      opacity: 0,\n      // Initial opacity\n      transform: 'translateY(100%)' // Initial transform (off-screen)\n    },\n    onRest: () => {\n      if (!firstPhaseDone) {\n        setFirstPhaseDone(true); // After first phase animation, proceed to second phase\n      }\n    }\n  });\n  const checkOtp = async () => {\n    try {\n      if (!otp) {\n        alert(\"Enter the OTP\");\n        return; // Exit early if OTP is missing\n      }\n      const res = await axios.post('http://localhost:5000/api/verifyotp/verify-otp', {\n        gmail: finalgmail.gmail,\n        otp: otp // Pass the OTP as a string\n      });\n      alert(res.data.message); // Show success message from the server\n      if (res.status === 200) {\n        setPasswordReset(true); // After successful OTP verification, show password reset form\n      }\n    } catch (error) {\n      // Handle errors properly\n      if (error.response) {\n        alert(error.response.data.message); // Server errors\n      } else {\n        alert(\"An error occurred. Please try again.\");\n      }\n    }\n  };\n  const resetPassword = async () => {\n    if (!password) {\n      alert(\"Please enter a new password.\");\n      return;\n    }\n    try {\n      const res = await axios.post('http://localhost:5000/api/updatepassword/reset-password', {\n        gmail: finalgmail.gmail,\n        password: password // Pass the new password\n      });\n      alert(res.data.message); // Show success message from the server\n      if (res.status === 200) {\n        // Redirect or take further actions after password reset\n        backtohome(); // You can navigate the user back to the home page after resetting password\n      }\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      alert(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"An error occurred while resetting the password.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forget-maincontent\",\n    children: [/*#__PURE__*/_jsxDEV(animated.div, {\n      className: \"forgetdiv1\",\n      style: div1,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: backtohome,\n        children: \">>>> GO BACK TO HOME PAGE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), !passwordReset && !otpSent && /*#__PURE__*/_jsxDEV(animated.div, {\n      className: \"forgetdiv2\",\n      style: div2,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forgetemail\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Enter Your Registered Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputemail\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"gmail\",\n          value: finalgmail.gmail,\n          onChange: handleChange,\n          id: \"inpemail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forget-submit\",\n        onClick: forget_checkvalidation,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }, this), otpSent && !passwordReset && /*#__PURE__*/_jsxDEV(animated.div, {\n      className: \"forgetdiv2\",\n      style: div3,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forgetemail\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Enter OTP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputemail\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"otp\",\n          value: otp,\n          onChange: handleOtpChange // Handle OTP change directly\n          ,\n          id: \"inpemail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"otp-expiry\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"OTP expires in: \", Math.floor(otpExpireTime / 60), \":\", otpExpireTime % 60]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forget-submit\",\n        onClick: checkOtp,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Submit OTP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }, this), passwordReset && /*#__PURE__*/_jsxDEV(animated.div, {\n      className: \"forgetdiv2\",\n      style: div4,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forgetemail\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Enter New Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputemail\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: handlePasswordChange,\n          placeholder: \"New Password\",\n          id: \"inpemail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forget-submit\",\n        onClick: resetPassword,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n};\n_s(Forgetpassword, \"SCpYPnT5ITRfGe/4mxVMqX842zA=\", false, function () {\n  return [useSpring, useSpring, useSpring, useSpring];\n});\n_c = Forgetpassword;\nexport default Forgetpassword;\nvar _c;\n$RefreshReg$(_c, \"Forgetpassword\");","map":{"version":3,"names":["React","useState","useEffect","GmailValidate","useSpring","animated","axios","jsxDEV","_jsxDEV","Forgetpassword","backtohome","otpVerifysuccess","_s","finalgmail","setgmail","gmail","otpSent","setOtpSent","otpExpireTime","setOtpExpireTime","otp","setOtp","password","setPassword","passwordReset","setPasswordReset","firstPhaseDone","setFirstPhaseDone","handleChange","e","target","name","value","handleOtpChange","handlePasswordChange","forget_checkvalidation","response","alert","server_response","post","data","message","status","startOtpTimer","error","_error$response","_error$response$data","console","expiryTime","timer","setInterval","prevTime","clearInterval","div1","opacity","transform","from","config","tension","friction","div2","div3","div4","onRest","checkOtp","res","resetPassword","_error$response2","_error$response2$data","className","children","div","style","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","id","Math","floor","placeholder","_c","$RefreshReg$"],"sources":["D:/VS_CODE/bookshopping/src/forgetpassword.js"],"sourcesContent":["import React, { useState,useEffect } from 'react';\r\nimport './forgetpassword.css';\r\nimport { GmailValidate } from './errorhandling';\r\nimport { useSpring, animated } from '@react-spring/web';\r\nimport axios from 'axios';\r\n\r\nconst Forgetpassword = ({ backtohome, otpVerifysuccess }) => {\r\n  const [finalgmail, setgmail] = useState({ gmail: '' });\r\n  const [otpSent, setOtpSent] = useState(false); // State to track if OTP is sent\r\n  const [otpExpireTime, setOtpExpireTime] = useState(0); // State for OTP expiry time\r\n  const [otp, setOtp] = useState(''); // State to store OTP entered by the user\r\n  const [password, setPassword] = useState(''); // State to store the new password\r\n  const [passwordReset, setPasswordReset] = useState(false); // State for showing password reset form\r\n  const [firstPhaseDone, setFirstPhaseDone] = useState(false); \r\n\r\n  const handleChange = (e) => {\r\n    setgmail({ ...finalgmail, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleOtpChange = (e) => {\r\n    setOtp(e.target.value); // Directly set OTP as a string\r\n  };\r\n\r\n  const handlePasswordChange = (e) => {\r\n    setPassword(e.target.value); // Handle password input\r\n  };\r\n\r\n  const forget_checkvalidation = async () => {\r\n    try {\r\n      // Validate email\r\n      const response = await GmailValidate(finalgmail.gmail);\r\n      if (response) {\r\n        alert(response);\r\n      }\r\n\r\n      // Send OTP request\r\n      const server_response = await axios.post('http://localhost:5000/api/sendotp/send-otp', {\r\n        gmail: finalgmail.gmail, // Ensure this is sent as an object\r\n      });\r\n\r\n      alert(server_response.data.message);\r\n\r\n      if (server_response.status === 200) {\r\n        setOtpSent(true);\r\n        startOtpTimer(); // Start OTP expiration timer\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error:\", error); // Debugging\r\n      alert(error.response?.data?.message || \"An error occurred while sending OTP.\");\r\n    }\r\n  };\r\n\r\n  const startOtpTimer = () => {\r\n    const expiryTime = 5 * 60; // 5 minutes in seconds\r\n    setOtpExpireTime(expiryTime);\r\n\r\n    const timer = setInterval(() => {\r\n      setOtpExpireTime((prevTime) => {\r\n        if (prevTime <= 1) {\r\n          clearInterval(timer);\r\n          return 0;\r\n        }\r\n        return prevTime - 1;\r\n      });\r\n    }, 1000);\r\n  };\r\n\r\n  // Spring animation code for initial and OTP screen\r\n  const div1 = useSpring({\r\n    opacity: 1,\r\n    transform: 'rotate(0deg)',\r\n    from: {\r\n      opacity: 0,\r\n      transform: 'rotate(180deg)',\r\n    },\r\n    config: { tension: 200, friction: 15 },\r\n  });\r\n\r\n  const div2 = useSpring({\r\n    opacity: 1,\r\n    transform: 'translateX(0%)',\r\n    from: {\r\n      opacity: 0,\r\n      transform: 'translateX(-100%)',\r\n    },\r\n    config: { tension: 70, friction: 15 },\r\n  });\r\n\r\n  const div3 = useSpring({\r\n    opacity: otpSent ? 1 : 0,\r\n    transform: otpSent ? 'translateX(0%)' : 'translateX(100%)',\r\n    config: { tension: 70, friction: 15 },\r\n  });\r\n\r\n  const div4 = useSpring({\r\n    opacity: passwordReset ? 1 : (firstPhaseDone ? 0.5 : 0), // Apply opacity based on phases\r\n    transform: passwordReset\r\n      ? 'rotate(0deg)' // Apply rotation after the transition phase\r\n      : firstPhaseDone\r\n      ? 'rotate(0deg)' // Transition to no rotation after first phase\r\n      : 'translateY(100%)', // Initial phase: starting position off-screen\r\n    config: { tension: 200, friction: 15 },\r\n    from: {\r\n      opacity: 0, // Initial opacity\r\n      transform: 'translateY(100%)', // Initial transform (off-screen)\r\n    },\r\n    onRest: () => {\r\n      if (!firstPhaseDone) {\r\n        setFirstPhaseDone(true); // After first phase animation, proceed to second phase\r\n      }\r\n    },\r\n  });\r\n  \r\n    \r\n\r\n  const checkOtp = async () => {\r\n    try {\r\n      if (!otp) {\r\n        alert(\"Enter the OTP\");\r\n        return; // Exit early if OTP is missing\r\n      }\r\n\r\n      const res = await axios.post('http://localhost:5000/api/verifyotp/verify-otp', { \r\n        gmail: finalgmail.gmail, \r\n        otp: otp, // Pass the OTP as a string\r\n      });\r\n\r\n      alert(res.data.message);  // Show success message from the server\r\n      if (res.status === 200) {\r\n        setPasswordReset(true); // After successful OTP verification, show password reset form\r\n      }\r\n    } catch (error) {\r\n      // Handle errors properly\r\n      if (error.response) {\r\n        alert(error.response.data.message); // Server errors\r\n      } else {\r\n        alert(\"An error occurred. Please try again.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const resetPassword = async () => { \r\n    if (!password) {\r\n      alert(\"Please enter a new password.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const res = await axios.post('http://localhost:5000/api/updatepassword/reset-password', { \r\n        gmail: finalgmail.gmail, \r\n        password: password, // Pass the new password\r\n      });\r\n\r\n      alert(res.data.message);  // Show success message from the server\r\n      if (res.status === 200) {\r\n        // Redirect or take further actions after password reset\r\n        backtohome(); // You can navigate the user back to the home page after resetting password\r\n      }\r\n    } catch (error) {\r\n      alert(error.response?.data?.message || \"An error occurred while resetting the password.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"forget-maincontent\">\r\n      <animated.div className=\"forgetdiv1\" style={div1}>\r\n        <p onClick={backtohome}>\r\n          >>>> GO BACK TO HOME PAGE\r\n        </p>\r\n      </animated.div>\r\n\r\n      {!passwordReset && !otpSent && (\r\n        <animated.div className=\"forgetdiv2\" style={div2}>\r\n          <div className=\"forgetemail\">\r\n            <label>Enter Your Registered Email</label>\r\n          </div>\r\n          <div className=\"inputemail\">\r\n            <input\r\n              type=\"email\"\r\n              name=\"gmail\"\r\n              value={finalgmail.gmail}\r\n              onChange={handleChange}\r\n              id=\"inpemail\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"forget-submit\" onClick={forget_checkvalidation}>\r\n            <p>Submit</p>\r\n          </div>\r\n        </animated.div>\r\n      )}\r\n\r\n      {otpSent && !passwordReset && (\r\n        <animated.div className=\"forgetdiv2\" style={div3}>\r\n          <div className=\"forgetemail\">\r\n            <label>Enter OTP</label>\r\n          </div>\r\n          <div className=\"inputemail\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"otp\"\r\n              value={otp}\r\n              onChange={handleOtpChange} // Handle OTP change directly\r\n              id=\"inpemail\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"otp-expiry\">\r\n            <p>OTP expires in: {Math.floor(otpExpireTime / 60)}:{otpExpireTime % 60}</p>\r\n          </div>\r\n\r\n          <div className=\"forget-submit\" onClick={checkOtp}>\r\n            <p>Submit OTP</p>\r\n          </div>\r\n        </animated.div>\r\n      )}\r\n\r\n      {passwordReset && (\r\n        <animated.div className=\"forgetdiv2\" style={div4}>\r\n          <div className=\"forgetemail\">\r\n          \r\n            <label>Enter New Password</label>\r\n            </div>\r\n            <div className='inputemail'>\r\n            <input\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={handlePasswordChange}\r\n              placeholder=\"New Password\"\r\n              id=\"inpemail\"\r\n            />\r\n          </div>\r\n          <div className=\"forget-submit\" onClick={resetPassword}>\r\n            <p>Reset Password</p>\r\n          </div>\r\n        </animated.div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Forgetpassword;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAACC,SAAS,QAAQ,OAAO;AACjD,OAAO,sBAAsB;AAC7B,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,SAASC,SAAS,EAAEC,QAAQ,QAAQ,mBAAmB;AACvD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,cAAc,GAAGA,CAAC;EAAEC,UAAU;EAAEC;AAAiB,CAAC,KAAK;EAAAC,EAAA;EAC3D,MAAM,CAACC,UAAU,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC;IAAEc,KAAK,EAAE;EAAG,CAAC,CAAC;EACtD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACiB,aAAa,EAAEC,gBAAgB,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EACvD,MAAM,CAACmB,GAAG,EAAEC,MAAM,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACpC,MAAM,CAACqB,QAAQ,EAAEC,WAAW,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACuB,aAAa,EAAEC,gBAAgB,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EAC3D,MAAM,CAACyB,cAAc,EAAEC,iBAAiB,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC;EAE3D,MAAM2B,YAAY,GAAIC,CAAC,IAAK;IAC1Bf,QAAQ,CAAC;MAAE,GAAGD,UAAU;MAAE,CAACgB,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE;IAAM,CAAC,CAAC;EAC9D,CAAC;EAED,MAAMC,eAAe,GAAIJ,CAAC,IAAK;IAC7BR,MAAM,CAACQ,CAAC,CAACC,MAAM,CAACE,KAAK,CAAC,CAAC,CAAC;EAC1B,CAAC;EAED,MAAME,oBAAoB,GAAIL,CAAC,IAAK;IAClCN,WAAW,CAACM,CAAC,CAACC,MAAM,CAACE,KAAK,CAAC,CAAC,CAAC;EAC/B,CAAC;EAED,MAAMG,sBAAsB,GAAG,MAAAA,CAAA,KAAY;IACzC,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMjC,aAAa,CAACU,UAAU,CAACE,KAAK,CAAC;MACtD,IAAIqB,QAAQ,EAAE;QACZC,KAAK,CAACD,QAAQ,CAAC;MACjB;;MAEA;MACA,MAAME,eAAe,GAAG,MAAMhC,KAAK,CAACiC,IAAI,CAAC,4CAA4C,EAAE;QACrFxB,KAAK,EAAEF,UAAU,CAACE,KAAK,CAAE;MAC3B,CAAC,CAAC;MAEFsB,KAAK,CAACC,eAAe,CAACE,IAAI,CAACC,OAAO,CAAC;MAEnC,IAAIH,eAAe,CAACI,MAAM,KAAK,GAAG,EAAE;QAClCzB,UAAU,CAAC,IAAI,CAAC;QAChB0B,aAAa,CAAC,CAAC,CAAC,CAAC;MACnB;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAC,eAAA,EAAAC,oBAAA;MACdC,OAAO,CAACH,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC,CAAC,CAAC;MAChCP,KAAK,CAAC,EAAAQ,eAAA,GAAAD,KAAK,CAACR,QAAQ,cAAAS,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBL,IAAI,cAAAM,oBAAA,uBAApBA,oBAAA,CAAsBL,OAAO,KAAI,sCAAsC,CAAC;IAChF;EACF,CAAC;EAED,MAAME,aAAa,GAAGA,CAAA,KAAM;IAC1B,MAAMK,UAAU,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC;IAC3B7B,gBAAgB,CAAC6B,UAAU,CAAC;IAE5B,MAAMC,KAAK,GAAGC,WAAW,CAAC,MAAM;MAC9B/B,gBAAgB,CAAEgC,QAAQ,IAAK;QAC7B,IAAIA,QAAQ,IAAI,CAAC,EAAE;UACjBC,aAAa,CAACH,KAAK,CAAC;UACpB,OAAO,CAAC;QACV;QACA,OAAOE,QAAQ,GAAG,CAAC;MACrB,CAAC,CAAC;IACJ,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;;EAED;EACA,MAAME,IAAI,GAAGjD,SAAS,CAAC;IACrBkD,OAAO,EAAE,CAAC;IACVC,SAAS,EAAE,cAAc;IACzBC,IAAI,EAAE;MACJF,OAAO,EAAE,CAAC;MACVC,SAAS,EAAE;IACb,CAAC;IACDE,MAAM,EAAE;MAAEC,OAAO,EAAE,GAAG;MAAEC,QAAQ,EAAE;IAAG;EACvC,CAAC,CAAC;EAEF,MAAMC,IAAI,GAAGxD,SAAS,CAAC;IACrBkD,OAAO,EAAE,CAAC;IACVC,SAAS,EAAE,gBAAgB;IAC3BC,IAAI,EAAE;MACJF,OAAO,EAAE,CAAC;MACVC,SAAS,EAAE;IACb,CAAC;IACDE,MAAM,EAAE;MAAEC,OAAO,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAG;EACtC,CAAC,CAAC;EAEF,MAAME,IAAI,GAAGzD,SAAS,CAAC;IACrBkD,OAAO,EAAEtC,OAAO,GAAG,CAAC,GAAG,CAAC;IACxBuC,SAAS,EAAEvC,OAAO,GAAG,gBAAgB,GAAG,kBAAkB;IAC1DyC,MAAM,EAAE;MAAEC,OAAO,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAG;EACtC,CAAC,CAAC;EAEF,MAAMG,IAAI,GAAG1D,SAAS,CAAC;IACrBkD,OAAO,EAAE9B,aAAa,GAAG,CAAC,GAAIE,cAAc,GAAG,GAAG,GAAG,CAAE;IAAE;IACzD6B,SAAS,EAAE/B,aAAa,GACpB,cAAc,CAAC;IAAA,EACfE,cAAc,GACd,cAAc,CAAC;IAAA,EACf,kBAAkB;IAAE;IACxB+B,MAAM,EAAE;MAAEC,OAAO,EAAE,GAAG;MAAEC,QAAQ,EAAE;IAAG,CAAC;IACtCH,IAAI,EAAE;MACJF,OAAO,EAAE,CAAC;MAAE;MACZC,SAAS,EAAE,kBAAkB,CAAE;IACjC,CAAC;IACDQ,MAAM,EAAEA,CAAA,KAAM;MACZ,IAAI,CAACrC,cAAc,EAAE;QACnBC,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC;MAC3B;IACF;EACF,CAAC,CAAC;EAIF,MAAMqC,QAAQ,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI;MACF,IAAI,CAAC5C,GAAG,EAAE;QACRiB,KAAK,CAAC,eAAe,CAAC;QACtB,OAAO,CAAC;MACV;MAEA,MAAM4B,GAAG,GAAG,MAAM3D,KAAK,CAACiC,IAAI,CAAC,gDAAgD,EAAE;QAC7ExB,KAAK,EAAEF,UAAU,CAACE,KAAK;QACvBK,GAAG,EAAEA,GAAG,CAAE;MACZ,CAAC,CAAC;MAEFiB,KAAK,CAAC4B,GAAG,CAACzB,IAAI,CAACC,OAAO,CAAC,CAAC,CAAE;MAC1B,IAAIwB,GAAG,CAACvB,MAAM,KAAK,GAAG,EAAE;QACtBjB,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC;MAC1B;IACF,CAAC,CAAC,OAAOmB,KAAK,EAAE;MACd;MACA,IAAIA,KAAK,CAACR,QAAQ,EAAE;QAClBC,KAAK,CAACO,KAAK,CAACR,QAAQ,CAACI,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC;MACtC,CAAC,MAAM;QACLJ,KAAK,CAAC,sCAAsC,CAAC;MAC/C;IACF;EACF,CAAC;EAED,MAAM6B,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI,CAAC5C,QAAQ,EAAE;MACbe,KAAK,CAAC,8BAA8B,CAAC;MACrC;IACF;IAEA,IAAI;MACF,MAAM4B,GAAG,GAAG,MAAM3D,KAAK,CAACiC,IAAI,CAAC,yDAAyD,EAAE;QACtFxB,KAAK,EAAEF,UAAU,CAACE,KAAK;QACvBO,QAAQ,EAAEA,QAAQ,CAAE;MACtB,CAAC,CAAC;MAEFe,KAAK,CAAC4B,GAAG,CAACzB,IAAI,CAACC,OAAO,CAAC,CAAC,CAAE;MAC1B,IAAIwB,GAAG,CAACvB,MAAM,KAAK,GAAG,EAAE;QACtB;QACAhC,UAAU,CAAC,CAAC,CAAC,CAAC;MAChB;IACF,CAAC,CAAC,OAAOkC,KAAK,EAAE;MAAA,IAAAuB,gBAAA,EAAAC,qBAAA;MACd/B,KAAK,CAAC,EAAA8B,gBAAA,GAAAvB,KAAK,CAACR,QAAQ,cAAA+B,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgB3B,IAAI,cAAA4B,qBAAA,uBAApBA,qBAAA,CAAsB3B,OAAO,KAAI,iDAAiD,CAAC;IAC3F;EACF,CAAC;EAED,oBACEjC,OAAA;IAAK6D,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBACjC9D,OAAA,CAACH,QAAQ,CAACkE,GAAG;MAACF,SAAS,EAAC,YAAY;MAACG,KAAK,EAAEnB,IAAK;MAAAiB,QAAA,eAC/C9D,OAAA;QAAGiE,OAAO,EAAE/D,UAAW;QAAA4D,QAAA,EAAC;MAExB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACQ,CAAC,EAEd,CAACrD,aAAa,IAAI,CAACR,OAAO,iBACzBR,OAAA,CAACH,QAAQ,CAACkE,GAAG;MAACF,SAAS,EAAC,YAAY;MAACG,KAAK,EAAEZ,IAAK;MAAAU,QAAA,gBAC/C9D,OAAA;QAAK6D,SAAS,EAAC,aAAa;QAAAC,QAAA,eAC1B9D,OAAA;UAAA8D,QAAA,EAAO;QAA2B;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvC,CAAC,eACNrE,OAAA;QAAK6D,SAAS,EAAC,YAAY;QAAAC,QAAA,eACzB9D,OAAA;UACEsE,IAAI,EAAC,OAAO;UACZ/C,IAAI,EAAC,OAAO;UACZC,KAAK,EAAEnB,UAAU,CAACE,KAAM;UACxBgE,QAAQ,EAAEnD,YAAa;UACvBoD,EAAE,EAAC;QAAU;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACd;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAENrE,OAAA;QAAK6D,SAAS,EAAC,eAAe;QAACI,OAAO,EAAEtC,sBAAuB;QAAAmC,QAAA,eAC7D9D,OAAA;UAAA8D,QAAA,EAAG;QAAM;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM,CACf,EAEA7D,OAAO,IAAI,CAACQ,aAAa,iBACxBhB,OAAA,CAACH,QAAQ,CAACkE,GAAG;MAACF,SAAS,EAAC,YAAY;MAACG,KAAK,EAAEX,IAAK;MAAAS,QAAA,gBAC/C9D,OAAA;QAAK6D,SAAS,EAAC,aAAa;QAAAC,QAAA,eAC1B9D,OAAA;UAAA8D,QAAA,EAAO;QAAS;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB,CAAC,eACNrE,OAAA;QAAK6D,SAAS,EAAC,YAAY;QAAAC,QAAA,eACzB9D,OAAA;UACEsE,IAAI,EAAC,MAAM;UACX/C,IAAI,EAAC,KAAK;UACVC,KAAK,EAAEZ,GAAI;UACX2D,QAAQ,EAAE9C,eAAgB,CAAC;UAAA;UAC3B+C,EAAE,EAAC;QAAU;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACd;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAENrE,OAAA;QAAK6D,SAAS,EAAC,YAAY;QAAAC,QAAA,eACzB9D,OAAA;UAAA8D,QAAA,GAAG,kBAAgB,EAACW,IAAI,CAACC,KAAK,CAAChE,aAAa,GAAG,EAAE,CAAC,EAAC,GAAC,EAACA,aAAa,GAAG,EAAE;QAAA;UAAAwD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzE,CAAC,eAENrE,OAAA;QAAK6D,SAAS,EAAC,eAAe;QAACI,OAAO,EAAET,QAAS;QAAAM,QAAA,eAC/C9D,OAAA;UAAA8D,QAAA,EAAG;QAAU;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACd,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM,CACf,EAEArD,aAAa,iBACZhB,OAAA,CAACH,QAAQ,CAACkE,GAAG;MAACF,SAAS,EAAC,YAAY;MAACG,KAAK,EAAEV,IAAK;MAAAQ,QAAA,gBAC/C9D,OAAA;QAAK6D,SAAS,EAAC,aAAa;QAAAC,QAAA,eAE1B9D,OAAA;UAAA8D,QAAA,EAAO;QAAkB;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC,eACNrE,OAAA;QAAK6D,SAAS,EAAC,YAAY;QAAAC,QAAA,eAC3B9D,OAAA;UACEsE,IAAI,EAAC,UAAU;UACf9C,KAAK,EAAEV,QAAS;UAChByD,QAAQ,EAAE7C,oBAAqB;UAC/BiD,WAAW,EAAC,cAAc;UAC1BH,EAAE,EAAC;QAAU;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACd;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNrE,OAAA;QAAK6D,SAAS,EAAC,eAAe;QAACI,OAAO,EAAEP,aAAc;QAAAI,QAAA,eACpD9D,OAAA;UAAA8D,QAAA,EAAG;QAAc;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM,CACf;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACjE,EAAA,CAzOIH,cAAc;EAAA,QA8DLL,SAAS,EAUTA,SAAS,EAUTA,SAAS,EAMTA,SAAS;AAAA;AAAAgF,EAAA,GAxFlB3E,cAAc;AA2OpB,eAAeA,cAAc;AAAC,IAAA2E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}