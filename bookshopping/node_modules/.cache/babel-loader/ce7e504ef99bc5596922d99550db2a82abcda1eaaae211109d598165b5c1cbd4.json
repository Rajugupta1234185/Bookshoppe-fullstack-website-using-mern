{"ast":null,"code":"var _jsxFileName = \"D:\\\\VS_CODE\\\\bookshopping\\\\src\\\\gmailverification.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useSpring, animated } from \"@react-spring/web\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OTPVerification = () => {\n  _s();\n  const [step, setStep] = useState(1);\n\n  // Animations for appearing next to the previous one\n  const processingAnim = useSpring({\n    opacity: step >= 2 ? 1 : 0,\n    transform: step >= 2 ? \"translateX(0px)\" : \"translateX(-20px)\",\n    config: {\n      tension: 200,\n      friction: 15\n    }\n  });\n  const verifiedAnim = useSpring({\n    opacity: step >= 3 ? 1 : 0,\n    transform: step >= 3 ? \"translateX(0px)\" : \"translateX(-20px)\",\n    config: {\n      tension: 200,\n      friction: 15\n    }\n  });\n\n  // Handle Submit\n  const handleSubmit = () => {\n    setStep(2); // Show processing next to OTP input\n    setTimeout(() => {\n      setStep(3); // After 1 second, show verified message next to processing\n    }, 1000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.box,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: styles.label,\n        children: \"Enter OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        style: styles.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        style: styles.button,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(animated.div, {\n      style: {\n        ...styles.box,\n        ...processingAnim\n      },\n      children: step >= 2 && /*#__PURE__*/_jsxDEV(\"button\", {\n        style: styles.processingButton,\n        children: \"Processing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 23\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(animated.div, {\n      style: {\n        ...styles.box,\n        ...verifiedAnim\n      },\n      children: step >= 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.successMessage,\n        children: \"OTP Verified Successfully\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 23\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(OTPVerification, \"QmRKAeni55SskkR8zO9tJoDHQSM=\", false, function () {\n  return [useSpring, useSpring];\n});\n_c = OTPVerification;\nconst styles = {\n  container: {\n    display: \"flex\",\n    alignItems: \"center\",\n    gap: \"20px\",\n    padding: \"50px\",\n    backgroundColor: \"#4A0072\"\n  },\n  box: {\n    minWidth: \"150px\",\n    padding: \"20px\",\n    backgroundColor: \"#4B4892\",\n    borderRadius: \"10px\",\n    textAlign: \"center\"\n  },\n  label: {\n    display: \"block\",\n    color: \"#fff\",\n    marginBottom: \"10px\"\n  },\n  input: {\n    width: \"100%\",\n    padding: \"10px\",\n    borderRadius: \"5px\",\n    border: \"none\",\n    outline: \"none\",\n    backgroundColor: \"#ff40a0\",\n    color: \"#fff\",\n    fontSize: \"16px\",\n    marginBottom: \"10px\"\n  },\n  button: {\n    backgroundColor: \"#ff40a0\",\n    color: \"#fff\",\n    border: \"none\",\n    padding: \"10px 20px\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\"\n  },\n  processingButton: {\n    backgroundColor: \"#ff40a0\",\n    color: \"#fff\",\n    border: \"none\",\n    padding: \"10px 20px\",\n    borderRadius: \"5px\",\n    fontSize: \"16px\"\n  },\n  successMessage: {\n    backgroundColor: \"#D9D9D9\",\n    color: \"#000\",\n    padding: \"10px\",\n    borderRadius: \"5px\"\n  }\n};\nexport default OTPVerification;\nvar _c;\n$RefreshReg$(_c, \"OTPVerification\");","map":{"version":3,"names":["React","useState","useSpring","animated","jsxDEV","_jsxDEV","OTPVerification","_s","step","setStep","processingAnim","opacity","transform","config","tension","friction","verifiedAnim","handleSubmit","setTimeout","style","styles","container","children","box","label","fileName","_jsxFileName","lineNumber","columnNumber","type","input","onClick","button","div","processingButton","successMessage","_c","display","alignItems","gap","padding","backgroundColor","minWidth","borderRadius","textAlign","color","marginBottom","width","border","outline","fontSize","cursor","$RefreshReg$"],"sources":["D:/VS_CODE/bookshopping/src/gmailverification.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useSpring, animated } from \"@react-spring/web\";\r\n\r\nconst OTPVerification = () => {\r\n  const [step, setStep] = useState(1);\r\n\r\n  // Animations for appearing next to the previous one\r\n  const processingAnim = useSpring({\r\n    opacity: step >= 2 ? 1 : 0,\r\n    transform: step >= 2 ? \"translateX(0px)\" : \"translateX(-20px)\",\r\n    config: { tension: 200, friction: 15 },\r\n  });\r\n\r\n  const verifiedAnim = useSpring({\r\n    opacity: step >= 3 ? 1 : 0,\r\n    transform: step >= 3 ? \"translateX(0px)\" : \"translateX(-20px)\",\r\n    config: { tension: 200, friction: 15 },\r\n  });\r\n\r\n  // Handle Submit\r\n  const handleSubmit = () => {\r\n    setStep(2); // Show processing next to OTP input\r\n    setTimeout(() => {\r\n      setStep(3); // After 1 second, show verified message next to processing\r\n    }, 1000);\r\n  };\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      {/* OTP Input Section */}\r\n      <div style={styles.box}>\r\n        <label style={styles.label}>Enter OTP</label>\r\n        <input type=\"text\" style={styles.input} />\r\n        <button onClick={handleSubmit} style={styles.button}>\r\n          Submit\r\n        </button>\r\n      </div>\r\n\r\n      {/* Processing Section (Appears after Submit) */}\r\n      <animated.div style={{ ...styles.box, ...processingAnim }}>\r\n        {step >= 2 && <button style={styles.processingButton}>Processing</button>}\r\n      </animated.div>\r\n\r\n      {/* OTP Verified Section (Appears after 1 sec) */}\r\n      <animated.div style={{ ...styles.box, ...verifiedAnim }}>\r\n        {step >= 3 && <div style={styles.successMessage}>OTP Verified Successfully</div>}\r\n      </animated.div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  container: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    gap: \"20px\",\r\n    padding: \"50px\",\r\n    backgroundColor: \"#4A0072\",\r\n  },\r\n  box: {\r\n    minWidth: \"150px\",\r\n    padding: \"20px\",\r\n    backgroundColor: \"#4B4892\",\r\n    borderRadius: \"10px\",\r\n    textAlign: \"center\",\r\n  },\r\n  label: {\r\n    display: \"block\",\r\n    color: \"#fff\",\r\n    marginBottom: \"10px\",\r\n  },\r\n  input: {\r\n    width: \"100%\",\r\n    padding: \"10px\",\r\n    borderRadius: \"5px\",\r\n    border: \"none\",\r\n    outline: \"none\",\r\n    backgroundColor: \"#ff40a0\",\r\n    color: \"#fff\",\r\n    fontSize: \"16px\",\r\n    marginBottom: \"10px\",\r\n  },\r\n  button: {\r\n    backgroundColor: \"#ff40a0\",\r\n    color: \"#fff\",\r\n    border: \"none\",\r\n    padding: \"10px 20px\",\r\n    borderRadius: \"5px\",\r\n    cursor: \"pointer\",\r\n  },\r\n  processingButton: {\r\n    backgroundColor: \"#ff40a0\",\r\n    color: \"#fff\",\r\n    border: \"none\",\r\n    padding: \"10px 20px\",\r\n    borderRadius: \"5px\",\r\n    fontSize: \"16px\",\r\n  },\r\n  successMessage: {\r\n    backgroundColor: \"#D9D9D9\",\r\n    color: \"#000\",\r\n    padding: \"10px\",\r\n    borderRadius: \"5px\",\r\n  },\r\n};\r\n\r\nexport default OTPVerification;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}