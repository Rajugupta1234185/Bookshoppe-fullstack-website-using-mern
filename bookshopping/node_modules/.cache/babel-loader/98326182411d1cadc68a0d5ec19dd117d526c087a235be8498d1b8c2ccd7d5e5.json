{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./forgetpassword.css';import{GmailValidate}from'./errorhandling';import{useSpring,animated}from'@react-spring/web';import axios from'axios';import{PasswordValidate}from'./errorhandling';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Forgetpassword=_ref=>{let{backtohome,otpVerifysuccess}=_ref;const[finalgmail,setgmail]=useState({gmail:''});const[otpSent,setOtpSent]=useState(false);// State to track if OTP is sent\nconst[otpExpireTime,setOtpExpireTime]=useState(0);// State for OTP expiry time\nconst[otp,setOtp]=useState('');// State to store OTP entered by the user\nconst[password,setPassword]=useState('');// State to store the new password\nconst[passwordReset,setPasswordReset]=useState(false);// State for showing password reset form\nconst[firstPhaseDone,setFirstPhaseDone]=useState(false);const handleChange=e=>{setgmail({...finalgmail,[e.target.name]:e.target.value});};const handleOtpChange=e=>{setOtp(e.target.value);// Directly set OTP as a string\n};const handlePasswordChange=e=>{setPassword(e.target.value);// Handle password input\n};const forget_checkvalidation=async()=>{try{// Validate email\nconst response=await GmailValidate(finalgmail.gmail);if(response){alert(response);}// Send OTP request\nconst server_response=await axios.post('http://localhost:5000/api/sendotp/send-otp',{gmail:finalgmail.gmail// Ensure this is sent as an object\n});alert(server_response.data.message);if(server_response.status===200){setOtpSent(true);startOtpTimer();// Start OTP expiration timer\n}}catch(error){var _error$response,_error$response$data;console.error(\"Error:\",error);// Debugging\nalert(((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||\"An error occurred while sending OTP.\");}};const startOtpTimer=()=>{const expiryTime=5*60;// 5 minutes in seconds\nsetOtpExpireTime(expiryTime);const timer=setInterval(()=>{setOtpExpireTime(prevTime=>{if(prevTime<=1){clearInterval(timer);return 0;}return prevTime-1;});},1000);};// Spring animation code for initial and OTP screen\nconst div1=useSpring({opacity:1,transform:'rotate(0deg)',from:{opacity:0,transform:'rotate(180deg)'},config:{tension:200,friction:15}});const div2=useSpring({opacity:1,transform:'translateX(0%)',from:{opacity:0,transform:'translateX(-100%)'},config:{tension:70,friction:15}});const div3=useSpring({opacity:otpSent?1:0,transform:otpSent?'translateX(0%)':'translateX(100%)',config:{tension:70,friction:15}});const div4=useSpring({opacity:passwordReset?1:firstPhaseDone?0.5:0,// Apply opacity based on phases\ntransform:passwordReset?'rotate(0deg)'// Apply rotation after the transition phase\n:firstPhaseDone?'rotate(0deg)'// Transition to no rotation after first phase\n:'translateY(100%)',// Initial phase: starting position off-screen\nconfig:{tension:200,friction:15},from:{opacity:0,// Initial opacity\ntransform:'translateY(100%)'// Initial transform (off-screen)\n},onRest:()=>{if(!firstPhaseDone){setFirstPhaseDone(true);// After first phase animation, proceed to second phase\n}}});const checkOtp=async()=>{try{if(!otp){alert(\"Enter the OTP\");return;// Exit early if OTP is missing\n}const res=await axios.post('http://localhost:5000/api/verifyotp/verify-otp',{gmail:finalgmail.gmail,otp:otp// Pass the OTP as a string\n});alert(res.data.message);// Show success message from the server\nif(res.status===200){setPasswordReset(true);// After successful OTP verification, show password reset form\n}}catch(error){// Handle errors properly\nif(error.response){alert(error.response.data.message);// Server errors\n}else{alert(\"An error occurred. Please try again.\");}}};const resetPassword=async()=>{if(!password){alert(\"Please enter a new password.\");return;}else{const msg=PasswordValidate(password);if(msg){alert(msg);}else{try{const res=await axios.post('http://localhost:5000/api/updatepassword/updateUserinfo',{gmail:finalgmail.gmail,newpassword:password// Pass the new password\n});alert(res.data.message);// Show success message from the server\nif(res.status===200){// Redirect or take further actions after password reset\nbacktohome();// You can navigate the user back to the home page after resetting password\n}}catch(error){var _error$response2,_error$response2$data;alert(((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.message)||\"An error occurred while resetting the password.\");}};}};return/*#__PURE__*/_jsxs(\"div\",{className:\"forget-maincontent\",children:[/*#__PURE__*/_jsx(animated.div,{className:\"forgetdiv1\",style:div1,children:/*#__PURE__*/_jsx(\"p\",{onClick:backtohome,children:\">>>> GO BACK TO HOME PAGE\"})}),!passwordReset&&!otpSent&&/*#__PURE__*/_jsxs(animated.div,{className:\"forgetdiv2\",style:div2,children:[/*#__PURE__*/_jsx(\"div\",{className:\"forgetemail\",children:/*#__PURE__*/_jsx(\"label\",{children:\"Enter Your Registered Email\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"inputemail\",children:/*#__PURE__*/_jsx(\"input\",{type:\"email\",name:\"gmail\",value:finalgmail.gmail,onChange:handleChange,id:\"inpemail\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"forget-submit\",onClick:forget_checkvalidation,children:/*#__PURE__*/_jsx(\"p\",{children:\"Submit\"})})]}),otpSent&&!passwordReset&&/*#__PURE__*/_jsxs(animated.div,{className:\"forgetdiv2\",style:div3,children:[/*#__PURE__*/_jsx(\"div\",{className:\"forgetemail\",children:/*#__PURE__*/_jsx(\"label\",{children:\"Enter OTP\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"inputemail\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"otp\",value:otp,onChange:handleOtpChange// Handle OTP change directly\n,id:\"inpemail\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"otp-expiry\",children:/*#__PURE__*/_jsxs(\"p\",{children:[\"OTP expires in: \",Math.floor(otpExpireTime/60),\":\",otpExpireTime%60]})}),/*#__PURE__*/_jsx(\"div\",{className:\"forget-submit\",onClick:checkOtp,children:/*#__PURE__*/_jsx(\"p\",{children:\"Submit OTP\"})})]}),passwordReset&&/*#__PURE__*/_jsxs(animated.div,{className:\"forgetdiv2\",style:div4,children:[/*#__PURE__*/_jsx(\"div\",{className:\"forgetemail\",children:/*#__PURE__*/_jsx(\"label\",{children:\"Enter New Password\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"inputemail\",children:/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:password,onChange:handlePasswordChange,placeholder:\"New Password\",id:\"inpemail\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"forget-submit\",onClick:resetPassword,children:/*#__PURE__*/_jsx(\"p\",{children:\"Reset Password\"})})]})]});};export default Forgetpassword;","map":{"version":3,"names":["React","useState","useEffect","GmailValidate","useSpring","animated","axios","PasswordValidate","jsx","_jsx","jsxs","_jsxs","Forgetpassword","_ref","backtohome","otpVerifysuccess","finalgmail","setgmail","gmail","otpSent","setOtpSent","otpExpireTime","setOtpExpireTime","otp","setOtp","password","setPassword","passwordReset","setPasswordReset","firstPhaseDone","setFirstPhaseDone","handleChange","e","target","name","value","handleOtpChange","handlePasswordChange","forget_checkvalidation","response","alert","server_response","post","data","message","status","startOtpTimer","error","_error$response","_error$response$data","console","expiryTime","timer","setInterval","prevTime","clearInterval","div1","opacity","transform","from","config","tension","friction","div2","div3","div4","onRest","checkOtp","res","resetPassword","msg","newpassword","_error$response2","_error$response2$data","className","children","div","style","onClick","type","onChange","id","Math","floor","placeholder"],"sources":["D:/mernstack/bookshopping/src/forgetpassword.js"],"sourcesContent":["import React, { useState,useEffect } from 'react';\r\nimport './forgetpassword.css';\r\nimport { GmailValidate } from './errorhandling';\r\nimport { useSpring, animated } from '@react-spring/web';\r\nimport axios from 'axios';\r\n\r\nimport { PasswordValidate } from './errorhandling';\r\n\r\nconst Forgetpassword = ({ backtohome, otpVerifysuccess }) => {\r\n  const [finalgmail, setgmail] = useState({ gmail: '' });\r\n  const [otpSent, setOtpSent] = useState(false); // State to track if OTP is sent\r\n  const [otpExpireTime, setOtpExpireTime] = useState(0); // State for OTP expiry time\r\n  const [otp, setOtp] = useState(''); // State to store OTP entered by the user\r\n  const [password, setPassword] = useState(''); // State to store the new password\r\n  const [passwordReset, setPasswordReset] = useState(false); // State for showing password reset form\r\n  const [firstPhaseDone, setFirstPhaseDone] = useState(false); \r\n\r\n  const handleChange = (e) => {\r\n    setgmail({ ...finalgmail, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleOtpChange = (e) => {\r\n    setOtp(e.target.value); // Directly set OTP as a string\r\n  };\r\n\r\n  const handlePasswordChange = (e) => {\r\n    setPassword(e.target.value); // Handle password input\r\n  };\r\n\r\n  const forget_checkvalidation = async () => {\r\n    try {\r\n      // Validate email\r\n      const response = await GmailValidate(finalgmail.gmail);\r\n      if (response) {\r\n        alert(response);\r\n      }\r\n\r\n      // Send OTP request\r\n      const server_response = await axios.post('http://localhost:5000/api/sendotp/send-otp', {\r\n        gmail: finalgmail.gmail, // Ensure this is sent as an object\r\n      });\r\n\r\n      alert(server_response.data.message);\r\n\r\n      if (server_response.status === 200) {\r\n        setOtpSent(true);\r\n        startOtpTimer(); // Start OTP expiration timer\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error:\", error); // Debugging\r\n      alert(error.response?.data?.message || \"An error occurred while sending OTP.\");\r\n    }\r\n  };\r\n\r\n  const startOtpTimer = () => {\r\n    const expiryTime = 5 * 60; // 5 minutes in seconds\r\n    setOtpExpireTime(expiryTime);\r\n\r\n    const timer = setInterval(() => {\r\n      setOtpExpireTime((prevTime) => {\r\n        if (prevTime <= 1) {\r\n          clearInterval(timer);\r\n          return 0;\r\n        }\r\n        return prevTime - 1;\r\n      });\r\n    }, 1000);\r\n  };\r\n\r\n  // Spring animation code for initial and OTP screen\r\n  const div1 = useSpring({\r\n    opacity: 1,\r\n    transform: 'rotate(0deg)',\r\n    from: {\r\n      opacity: 0,\r\n      transform: 'rotate(180deg)',\r\n    },\r\n    config: { tension: 200, friction: 15 },\r\n  });\r\n\r\n  const div2 = useSpring({\r\n    opacity: 1,\r\n    transform: 'translateX(0%)',\r\n    from: {\r\n      opacity: 0,\r\n      transform: 'translateX(-100%)',\r\n    },\r\n    config: { tension: 70, friction: 15 },\r\n  });\r\n\r\n  const div3 = useSpring({\r\n    opacity: otpSent ? 1 : 0,\r\n    transform: otpSent ? 'translateX(0%)' : 'translateX(100%)',\r\n    config: { tension: 70, friction: 15 },\r\n  });\r\n\r\n  const div4 = useSpring({\r\n    opacity: passwordReset ? 1 : (firstPhaseDone ? 0.5 : 0), // Apply opacity based on phases\r\n    transform: passwordReset\r\n      ? 'rotate(0deg)' // Apply rotation after the transition phase\r\n      : firstPhaseDone\r\n      ? 'rotate(0deg)' // Transition to no rotation after first phase\r\n      : 'translateY(100%)', // Initial phase: starting position off-screen\r\n    config: { tension: 200, friction: 15 },\r\n    from: {\r\n      opacity: 0, // Initial opacity\r\n      transform: 'translateY(100%)', // Initial transform (off-screen)\r\n    },\r\n    onRest: () => {\r\n      if (!firstPhaseDone) {\r\n        setFirstPhaseDone(true); // After first phase animation, proceed to second phase\r\n      }\r\n    },\r\n  });\r\n  \r\n    \r\n\r\n  const checkOtp = async () => {\r\n    try {\r\n      if (!otp) {\r\n        alert(\"Enter the OTP\");\r\n        return; // Exit early if OTP is missing\r\n      }\r\n\r\n      const res = await axios.post('http://localhost:5000/api/verifyotp/verify-otp', { \r\n        gmail: finalgmail.gmail, \r\n        otp: otp, // Pass the OTP as a string\r\n      });\r\n\r\n      alert(res.data.message);  // Show success message from the server\r\n      if (res.status === 200) {\r\n        setPasswordReset(true); // After successful OTP verification, show password reset form\r\n      }\r\n    } catch (error) {\r\n      // Handle errors properly\r\n      if (error.response) {\r\n        alert(error.response.data.message); // Server errors\r\n      } else {\r\n        alert(\"An error occurred. Please try again.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const resetPassword = async () => { \r\n    if (!password) {\r\n      alert(\"Please enter a new password.\");\r\n      return;\r\n    }else{\r\n      const msg=PasswordValidate(password);\r\n      if(msg){\r\n        alert(msg);\r\n      }\r\n      else{\r\n\r\n    try {\r\n      const res = await axios.post('http://localhost:5000/api/updatepassword/updateUserinfo', { \r\n        gmail: finalgmail.gmail, \r\n        newpassword: password, // Pass the new password\r\n      });\r\n\r\n      alert(res.data.message);  // Show success message from the server\r\n      if (res.status === 200) {\r\n        // Redirect or take further actions after password reset\r\n        backtohome(); // You can navigate the user back to the home page after resetting password\r\n      }\r\n    } catch (error) {\r\n      alert(error.response?.data?.message || \"An error occurred while resetting the password.\");\r\n    }\r\n  };\r\n}\r\n  }\r\n\r\n  return (\r\n    <div className=\"forget-maincontent\">\r\n      <animated.div className=\"forgetdiv1\" style={div1}>\r\n        <p onClick={backtohome}>\r\n          >>>> GO BACK TO HOME PAGE\r\n        </p>\r\n      </animated.div>\r\n\r\n      {!passwordReset && !otpSent && (\r\n        <animated.div className=\"forgetdiv2\" style={div2}>\r\n          <div className=\"forgetemail\">\r\n            <label>Enter Your Registered Email</label>\r\n          </div>\r\n          <div className=\"inputemail\">\r\n            <input\r\n              type=\"email\"\r\n              name=\"gmail\"\r\n              value={finalgmail.gmail}\r\n              onChange={handleChange}\r\n              id=\"inpemail\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"forget-submit\" onClick={forget_checkvalidation}>\r\n            <p>Submit</p>\r\n          </div>\r\n        </animated.div>\r\n      )}\r\n\r\n      {otpSent && !passwordReset && (\r\n        <animated.div className=\"forgetdiv2\" style={div3}>\r\n          <div className=\"forgetemail\">\r\n            <label>Enter OTP</label>\r\n          </div>\r\n          <div className=\"inputemail\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"otp\"\r\n              value={otp}\r\n              onChange={handleOtpChange} // Handle OTP change directly\r\n              id=\"inpemail\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"otp-expiry\">\r\n            <p>OTP expires in: {Math.floor(otpExpireTime / 60)}:{otpExpireTime % 60}</p>\r\n          </div>\r\n\r\n          <div className=\"forget-submit\" onClick={checkOtp}>\r\n            <p>Submit OTP</p>\r\n          </div>\r\n        </animated.div>\r\n      )}\r\n\r\n      {passwordReset && (\r\n        <animated.div className=\"forgetdiv2\" style={div4}>\r\n          <div className=\"forgetemail\">\r\n          \r\n            <label>Enter New Password</label>\r\n            </div>\r\n            <div className='inputemail'>\r\n            <input\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={handlePasswordChange}\r\n              placeholder=\"New Password\"\r\n              id=\"inpemail\"\r\n            />\r\n          </div>\r\n          <div className=\"forget-submit\" onClick={resetPassword}>\r\n            <p>Reset Password</p>\r\n          </div>\r\n        </animated.div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Forgetpassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}