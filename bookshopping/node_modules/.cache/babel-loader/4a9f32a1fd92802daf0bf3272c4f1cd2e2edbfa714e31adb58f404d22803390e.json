{"ast":null,"code":"import React,{useState}from'react';import'./Signup.css';import{RequiredValidate,GmailValidate,PhoneValidate,PasswordValidate,rePasswordValidate}from'./errorhandling';import axios from'axios';import OTPVerification from'./OTPVerification';import{useFormData}from'./FormDataContext';// Import the useFormData hook\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const Signup=_ref=>{let{gotootp}=_ref;const{formData,updateFormData}=useFormData();// Access formData and updateFormData from context\n// State for error/success message\nconst[message,setMessage]=useState('');const[messageType,setMessageType]=useState('');// 'error' or 'success'\n// State to track if OTP is successfully sent\nconst[isOtpSent,setIsOtpSent]=useState(false);// Handle form data change\nconst handleChange=e=>{const{name,value}=e.target;updateFormData({[name]:value});// Use updateFormData instead of setFormData\n};// Handle form submission on clicking the \"Create Account\" div\nconst handleSubmit=async()=>{const{fname,lname,gmail,phone,password,rePassword}=formData;// Validate form fields\nconst fnameError=RequiredValidate(fname,'First Name');const lnameError=RequiredValidate(lname,'Last Name');const gmailError=GmailValidate(gmail);const phoneError=PhoneValidate(phone);const passwordError=PasswordValidate(password);const rePasswordError=rePasswordValidate(password,rePassword);// Check if there are any validation errors\nif(fnameError||lnameError||gmailError||phoneError||passwordError||rePasswordError){setMessage(`\n                ${fnameError||''} \n                ${lnameError||''} \n                ${gmailError||''} \n                ${phoneError||''} \n                ${passwordError||''} \n                ${rePasswordError||''}`);setMessageType('error');// Set the message type to error\n}else{try{const resforotp=await axios.post('http://localhost:5000/api/sendotp/send-otp',{gmail:formData.gmail});// Check if response is valid and contains 'data'\nif(resforotp&&resforotp.data){setMessage(resforotp.data.message);setMessageType('success');// Set the message type to success\nsetIsOtpSent(true);// Mark OTP as sent\nalert(formData.gmail);gotootp();// Call the OTP verification function\n}else{setMessage('Error: No data received from server');setMessageType('error');}}catch(error){console.error('Error during OTP request:',error);setMessage('Error: Failed to send OTP');setMessageType('error');}}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"main-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex4\"}),/*#__PURE__*/_jsx(\"div\",{className:\"flex5\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"signup-content\",children:/*#__PURE__*/_jsxs(\"form\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"fname\",children:/*#__PURE__*/_jsx(\"label\",{htmlFor:\"fname\",children:\"Enter First Name\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"enterfname\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"fname\",name:\"fname\",value:formData.fname,onChange:handleChange})}),/*#__PURE__*/_jsx(\"div\",{className:\"lname\",children:/*#__PURE__*/_jsx(\"label\",{htmlFor:\"lname\",children:\"Enter Last Name\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"enterlname\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"lname\",name:\"lname\",value:formData.lname,onChange:handleChange})}),/*#__PURE__*/_jsx(\"div\",{className:\"gmail\",children:/*#__PURE__*/_jsx(\"label\",{htmlFor:\"gmail\",children:\"Enter Gmail\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"entergmail\",children:/*#__PURE__*/_jsx(\"input\",{type:\"email\",id:\"gmail\",name:\"gmail\",placeholder:\"You@gmail.com\",value:formData.gmail,onChange:handleChange})}),/*#__PURE__*/_jsx(\"div\",{className:\"phone\",children:/*#__PURE__*/_jsx(\"label\",{htmlFor:\"phone\",children:\"Phone no.\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"enterphone\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"phone\",name:\"phone\",value:formData.phone,onChange:handleChange})}),/*#__PURE__*/_jsx(\"div\",{className:\"password\",children:/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",children:\"Create A strong Password\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"enterpass\",children:/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"pwd\",name:\"password\",value:formData.password,onChange:handleChange})}),/*#__PURE__*/_jsx(\"div\",{className:\"repass\",children:/*#__PURE__*/_jsx(\"label\",{htmlFor:\"rePassword\",children:\"Re-enter Your password\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"reenterpass\",children:/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"rePassword\",name:\"rePassword\",value:formData.rePassword,onChange:handleChange})}),/*#__PURE__*/_jsx(\"div\",{className:\"submit\",onClick:handleSubmit,children:/*#__PURE__*/_jsx(\"p\",{children:\"Create Account\"})})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"msg\",children:message&&/*#__PURE__*/_jsx(\"div\",{className:`message-box ${messageType}`,children:/*#__PURE__*/_jsx(\"p\",{children:message})})}),isOtpSent&&/*#__PURE__*/_jsx(OTPVerification,{formData:formData})]});};export default Signup;","map":{"version":3,"names":["React","useState","RequiredValidate","GmailValidate","PhoneValidate","PasswordValidate","rePasswordValidate","axios","OTPVerification","useFormData","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Signup","_ref","gotootp","formData","updateFormData","message","setMessage","messageType","setMessageType","isOtpSent","setIsOtpSent","handleChange","e","name","value","target","handleSubmit","fname","lname","gmail","phone","password","rePassword","fnameError","lnameError","gmailError","phoneError","passwordError","rePasswordError","resforotp","post","data","alert","error","console","children","className","htmlFor","type","id","onChange","placeholder","onClick"],"sources":["D:/mernstack/bookshopping/src/Signup.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Signup.css';\r\nimport { RequiredValidate, GmailValidate, PhoneValidate, PasswordValidate, rePasswordValidate } from './errorhandling';\r\nimport axios from 'axios';\r\nimport OTPVerification from './OTPVerification';\r\nimport { useFormData } from './FormDataContext'; // Import the useFormData hook\r\n\r\nconst Signup = ({ gotootp }) => {\r\n  const { formData, updateFormData } = useFormData(); // Access formData and updateFormData from context\r\n\r\n  // State for error/success message\r\n  const [message, setMessage] = useState('');\r\n  const [messageType, setMessageType] = useState(''); // 'error' or 'success'\r\n\r\n  // State to track if OTP is successfully sent\r\n  const [isOtpSent, setIsOtpSent] = useState(false);\r\n\r\n  // Handle form data change\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    updateFormData({ [name]: value }); // Use updateFormData instead of setFormData\r\n  };\r\n\r\n  // Handle form submission on clicking the \"Create Account\" div\r\n  const handleSubmit = async () => {\r\n    const { fname, lname, gmail, phone, password, rePassword } = formData;\r\n\r\n    // Validate form fields\r\n    const fnameError = RequiredValidate(fname, 'First Name');\r\n    const lnameError = RequiredValidate(lname, 'Last Name');\r\n    const gmailError = GmailValidate(gmail);\r\n    const phoneError = PhoneValidate(phone);\r\n    const passwordError = PasswordValidate(password);\r\n    const rePasswordError = rePasswordValidate(password, rePassword);\r\n\r\n    // Check if there are any validation errors\r\n    if (fnameError || lnameError || gmailError || phoneError || passwordError || rePasswordError) {\r\n      setMessage(`\r\n                ${fnameError || ''} \r\n                ${lnameError || ''} \r\n                ${gmailError || ''} \r\n                ${phoneError || ''} \r\n                ${passwordError || ''} \r\n                ${rePasswordError || ''}`);\r\n      setMessageType('error'); // Set the message type to error\r\n    } else {\r\n      try {\r\n        const resforotp = await axios.post('http://localhost:5000/api/sendotp/send-otp', { gmail: formData.gmail });\r\n\r\n        // Check if response is valid and contains 'data'\r\n        if (resforotp && resforotp.data) {\r\n          setMessage(resforotp.data.message);\r\n          setMessageType('success'); // Set the message type to success\r\n          setIsOtpSent(true); // Mark OTP as sent\r\n          alert(formData.gmail);\r\n          gotootp(); // Call the OTP verification function\r\n        } else {\r\n          setMessage('Error: No data received from server');\r\n          setMessageType('error');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error during OTP request:', error);\r\n        setMessage('Error: Failed to send OTP');\r\n        setMessageType('error');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"main-content\">\r\n        <div className=\"flex4\"></div>\r\n        <div className=\"flex5\"></div>\r\n      </div>\r\n\r\n      <div className=\"signup-content\">\r\n        <form>\r\n          <div className=\"fname\">\r\n            <label htmlFor=\"fname\">Enter First Name</label>\r\n          </div>\r\n          <div className=\"enterfname\">\r\n            <input type=\"text\" id=\"fname\" name=\"fname\" value={formData.fname} onChange={handleChange} />\r\n          </div>\r\n\r\n          <div className=\"lname\">\r\n            <label htmlFor=\"lname\">Enter Last Name</label>\r\n          </div>\r\n          <div className=\"enterlname\">\r\n            <input type=\"text\" id=\"lname\" name=\"lname\" value={formData.lname} onChange={handleChange} />\r\n          </div>\r\n\r\n          <div className=\"gmail\">\r\n            <label htmlFor=\"gmail\">Enter Gmail</label>\r\n          </div>\r\n          <div className=\"entergmail\">\r\n            <input type=\"email\" id=\"gmail\" name=\"gmail\" placeholder=\"You@gmail.com\" value={formData.gmail} onChange={handleChange} />\r\n          </div>\r\n\r\n          <div className=\"phone\">\r\n            <label htmlFor=\"phone\">Phone no.</label>\r\n          </div>\r\n          <div className=\"enterphone\">\r\n            <input type=\"text\" id=\"phone\" name=\"phone\" value={formData.phone} onChange={handleChange} />\r\n          </div>\r\n\r\n          <div className=\"password\">\r\n            <label htmlFor=\"password\">Create A strong Password</label>\r\n          </div>\r\n          <div className=\"enterpass\">\r\n            <input type=\"password\" id=\"pwd\" name=\"password\" value={formData.password} onChange={handleChange} />\r\n          </div>\r\n\r\n          <div className=\"repass\">\r\n            <label htmlFor=\"rePassword\">Re-enter Your password</label>\r\n          </div>\r\n          <div className=\"reenterpass\">\r\n            <input type=\"password\" id=\"rePassword\" name=\"rePassword\" value={formData.rePassword} onChange={handleChange} />\r\n          </div>\r\n\r\n          <div className=\"submit\" onClick={handleSubmit}>\r\n            <p>Create Account</p>\r\n          </div>\r\n        </form>\r\n      </div>\r\n\r\n      <div className=\"msg\">\r\n        {message && (\r\n          <div className={`message-box ${messageType}`}>\r\n            <p>{message}</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {isOtpSent && <OTPVerification formData={formData} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,cAAc,CACrB,OAASC,gBAAgB,CAAEC,aAAa,CAAEC,aAAa,CAAEC,gBAAgB,CAAEC,kBAAkB,KAAQ,iBAAiB,CACtH,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,eAAe,KAAM,mBAAmB,CAC/C,OAASC,WAAW,KAAQ,mBAAmB,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAEjD,KAAM,CAAAC,MAAM,CAAGC,IAAA,EAAiB,IAAhB,CAAEC,OAAQ,CAAC,CAAAD,IAAA,CACzB,KAAM,CAAEE,QAAQ,CAAEC,cAAe,CAAC,CAAGX,WAAW,CAAC,CAAC,CAAE;AAEpD;AACA,KAAM,CAACY,OAAO,CAAEC,UAAU,CAAC,CAAGrB,QAAQ,CAAC,EAAE,CAAC,CAC1C,KAAM,CAACsB,WAAW,CAAEC,cAAc,CAAC,CAAGvB,QAAQ,CAAC,EAAE,CAAC,CAAE;AAEpD;AACA,KAAM,CAACwB,SAAS,CAAEC,YAAY,CAAC,CAAGzB,QAAQ,CAAC,KAAK,CAAC,CAEjD;AACA,KAAM,CAAA0B,YAAY,CAAIC,CAAC,EAAK,CAC1B,KAAM,CAAEC,IAAI,CAAEC,KAAM,CAAC,CAAGF,CAAC,CAACG,MAAM,CAChCX,cAAc,CAAC,CAAE,CAACS,IAAI,EAAGC,KAAM,CAAC,CAAC,CAAE;AACrC,CAAC,CAED;AACA,KAAM,CAAAE,YAAY,CAAG,KAAAA,CAAA,GAAY,CAC/B,KAAM,CAAEC,KAAK,CAAEC,KAAK,CAAEC,KAAK,CAAEC,KAAK,CAAEC,QAAQ,CAAEC,UAAW,CAAC,CAAGnB,QAAQ,CAErE;AACA,KAAM,CAAAoB,UAAU,CAAGrC,gBAAgB,CAAC+B,KAAK,CAAE,YAAY,CAAC,CACxD,KAAM,CAAAO,UAAU,CAAGtC,gBAAgB,CAACgC,KAAK,CAAE,WAAW,CAAC,CACvD,KAAM,CAAAO,UAAU,CAAGtC,aAAa,CAACgC,KAAK,CAAC,CACvC,KAAM,CAAAO,UAAU,CAAGtC,aAAa,CAACgC,KAAK,CAAC,CACvC,KAAM,CAAAO,aAAa,CAAGtC,gBAAgB,CAACgC,QAAQ,CAAC,CAChD,KAAM,CAAAO,eAAe,CAAGtC,kBAAkB,CAAC+B,QAAQ,CAAEC,UAAU,CAAC,CAEhE;AACA,GAAIC,UAAU,EAAIC,UAAU,EAAIC,UAAU,EAAIC,UAAU,EAAIC,aAAa,EAAIC,eAAe,CAAE,CAC5FtB,UAAU,CAAC;AACjB,kBAAkBiB,UAAU,EAAI,EAAE;AAClC,kBAAkBC,UAAU,EAAI,EAAE;AAClC,kBAAkBC,UAAU,EAAI,EAAE;AAClC,kBAAkBC,UAAU,EAAI,EAAE;AAClC,kBAAkBC,aAAa,EAAI,EAAE;AACrC,kBAAkBC,eAAe,EAAI,EAAE,EAAE,CAAC,CACpCpB,cAAc,CAAC,OAAO,CAAC,CAAE;AAC3B,CAAC,IAAM,CACL,GAAI,CACF,KAAM,CAAAqB,SAAS,CAAG,KAAM,CAAAtC,KAAK,CAACuC,IAAI,CAAC,4CAA4C,CAAE,CAAEX,KAAK,CAAEhB,QAAQ,CAACgB,KAAM,CAAC,CAAC,CAE3G;AACA,GAAIU,SAAS,EAAIA,SAAS,CAACE,IAAI,CAAE,CAC/BzB,UAAU,CAACuB,SAAS,CAACE,IAAI,CAAC1B,OAAO,CAAC,CAClCG,cAAc,CAAC,SAAS,CAAC,CAAE;AAC3BE,YAAY,CAAC,IAAI,CAAC,CAAE;AACpBsB,KAAK,CAAC7B,QAAQ,CAACgB,KAAK,CAAC,CACrBjB,OAAO,CAAC,CAAC,CAAE;AACb,CAAC,IAAM,CACLI,UAAU,CAAC,qCAAqC,CAAC,CACjDE,cAAc,CAAC,OAAO,CAAC,CACzB,CACF,CAAE,MAAOyB,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,CAAEA,KAAK,CAAC,CACjD3B,UAAU,CAAC,2BAA2B,CAAC,CACvCE,cAAc,CAAC,OAAO,CAAC,CACzB,CACF,CACF,CAAC,CAED,mBACEX,KAAA,CAAAE,SAAA,EAAAoC,QAAA,eACEtC,KAAA,QAAKuC,SAAS,CAAC,cAAc,CAAAD,QAAA,eAC3BxC,IAAA,QAAKyC,SAAS,CAAC,OAAO,CAAM,CAAC,cAC7BzC,IAAA,QAAKyC,SAAS,CAAC,OAAO,CAAM,CAAC,EAC1B,CAAC,cAENzC,IAAA,QAAKyC,SAAS,CAAC,gBAAgB,CAAAD,QAAA,cAC7BtC,KAAA,SAAAsC,QAAA,eACExC,IAAA,QAAKyC,SAAS,CAAC,OAAO,CAAAD,QAAA,cACpBxC,IAAA,UAAO0C,OAAO,CAAC,OAAO,CAAAF,QAAA,CAAC,kBAAgB,CAAO,CAAC,CAC5C,CAAC,cACNxC,IAAA,QAAKyC,SAAS,CAAC,YAAY,CAAAD,QAAA,cACzBxC,IAAA,UAAO2C,IAAI,CAAC,MAAM,CAACC,EAAE,CAAC,OAAO,CAAC1B,IAAI,CAAC,OAAO,CAACC,KAAK,CAAEX,QAAQ,CAACc,KAAM,CAACuB,QAAQ,CAAE7B,YAAa,CAAE,CAAC,CACzF,CAAC,cAENhB,IAAA,QAAKyC,SAAS,CAAC,OAAO,CAAAD,QAAA,cACpBxC,IAAA,UAAO0C,OAAO,CAAC,OAAO,CAAAF,QAAA,CAAC,iBAAe,CAAO,CAAC,CAC3C,CAAC,cACNxC,IAAA,QAAKyC,SAAS,CAAC,YAAY,CAAAD,QAAA,cACzBxC,IAAA,UAAO2C,IAAI,CAAC,MAAM,CAACC,EAAE,CAAC,OAAO,CAAC1B,IAAI,CAAC,OAAO,CAACC,KAAK,CAAEX,QAAQ,CAACe,KAAM,CAACsB,QAAQ,CAAE7B,YAAa,CAAE,CAAC,CACzF,CAAC,cAENhB,IAAA,QAAKyC,SAAS,CAAC,OAAO,CAAAD,QAAA,cACpBxC,IAAA,UAAO0C,OAAO,CAAC,OAAO,CAAAF,QAAA,CAAC,aAAW,CAAO,CAAC,CACvC,CAAC,cACNxC,IAAA,QAAKyC,SAAS,CAAC,YAAY,CAAAD,QAAA,cACzBxC,IAAA,UAAO2C,IAAI,CAAC,OAAO,CAACC,EAAE,CAAC,OAAO,CAAC1B,IAAI,CAAC,OAAO,CAAC4B,WAAW,CAAC,eAAe,CAAC3B,KAAK,CAAEX,QAAQ,CAACgB,KAAM,CAACqB,QAAQ,CAAE7B,YAAa,CAAE,CAAC,CACtH,CAAC,cAENhB,IAAA,QAAKyC,SAAS,CAAC,OAAO,CAAAD,QAAA,cACpBxC,IAAA,UAAO0C,OAAO,CAAC,OAAO,CAAAF,QAAA,CAAC,WAAS,CAAO,CAAC,CACrC,CAAC,cACNxC,IAAA,QAAKyC,SAAS,CAAC,YAAY,CAAAD,QAAA,cACzBxC,IAAA,UAAO2C,IAAI,CAAC,MAAM,CAACC,EAAE,CAAC,OAAO,CAAC1B,IAAI,CAAC,OAAO,CAACC,KAAK,CAAEX,QAAQ,CAACiB,KAAM,CAACoB,QAAQ,CAAE7B,YAAa,CAAE,CAAC,CACzF,CAAC,cAENhB,IAAA,QAAKyC,SAAS,CAAC,UAAU,CAAAD,QAAA,cACvBxC,IAAA,UAAO0C,OAAO,CAAC,UAAU,CAAAF,QAAA,CAAC,0BAAwB,CAAO,CAAC,CACvD,CAAC,cACNxC,IAAA,QAAKyC,SAAS,CAAC,WAAW,CAAAD,QAAA,cACxBxC,IAAA,UAAO2C,IAAI,CAAC,UAAU,CAACC,EAAE,CAAC,KAAK,CAAC1B,IAAI,CAAC,UAAU,CAACC,KAAK,CAAEX,QAAQ,CAACkB,QAAS,CAACmB,QAAQ,CAAE7B,YAAa,CAAE,CAAC,CACjG,CAAC,cAENhB,IAAA,QAAKyC,SAAS,CAAC,QAAQ,CAAAD,QAAA,cACrBxC,IAAA,UAAO0C,OAAO,CAAC,YAAY,CAAAF,QAAA,CAAC,wBAAsB,CAAO,CAAC,CACvD,CAAC,cACNxC,IAAA,QAAKyC,SAAS,CAAC,aAAa,CAAAD,QAAA,cAC1BxC,IAAA,UAAO2C,IAAI,CAAC,UAAU,CAACC,EAAE,CAAC,YAAY,CAAC1B,IAAI,CAAC,YAAY,CAACC,KAAK,CAAEX,QAAQ,CAACmB,UAAW,CAACkB,QAAQ,CAAE7B,YAAa,CAAE,CAAC,CAC5G,CAAC,cAENhB,IAAA,QAAKyC,SAAS,CAAC,QAAQ,CAACM,OAAO,CAAE1B,YAAa,CAAAmB,QAAA,cAC5CxC,IAAA,MAAAwC,QAAA,CAAG,gBAAc,CAAG,CAAC,CAClB,CAAC,EACF,CAAC,CACJ,CAAC,cAENxC,IAAA,QAAKyC,SAAS,CAAC,KAAK,CAAAD,QAAA,CACjB9B,OAAO,eACNV,IAAA,QAAKyC,SAAS,CAAE,eAAe7B,WAAW,EAAG,CAAA4B,QAAA,cAC3CxC,IAAA,MAAAwC,QAAA,CAAI9B,OAAO,CAAI,CAAC,CACb,CACN,CACE,CAAC,CAELI,SAAS,eAAId,IAAA,CAACH,eAAe,EAACW,QAAQ,CAAEA,QAAS,CAAE,CAAC,EACrD,CAAC,CAEP,CAAC,CAED,cAAe,CAAAH,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}